openapi: 3.1.0
info:
  title: TubeArchivist API
  description: A subset of the TA REST API
  version: 0.4.7
paths:
  /video/:
    get:
      summary: Retrieve a list of videos
      operationId: listVideos
      tags:
        - Video
      responses:
        "200":
          description: A list of videos successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Video"
                  paginate:
                    $ref: "#/components/schemas/Pagination"
        "404":
          description: No videos found.

  /video/{video_id}/:
    get:
      summary: Retrieve metadata for a single video
      operationId: getVideo
      tags:
        - Video
      parameters:
        - name: video_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Video metadata retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Video"
        "404":
          description: Video not found.
    delete:
      summary: Delete a single video
      operationId: deleteVideo
      tags:
        - Video
      parameters:
        - name: video_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Video deleted successfully.
        "404":
          description: Video not found.

  /video/{video_id}/progress/:
    get:
      summary: Get progress of a video for a user
      operationId: getVideoProgress
      tags:
        - Video Progress
      parameters:
        - name: video_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Video progress retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VideoProgress"
    post:
      summary: Set progress of a video
      operationId: setVideoProgress
      tags:
        - Video Progress
      parameters:
        - name: video_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VideoProgressInput"
      responses:
        "200":
          description: Video progress updated successfully.
    delete:
      summary: Reset video progress
      operationId: resetVideoProgress
      tags:
        - Video Progress
      parameters:
        - name: video_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Video progress reset successfully.

  /playlist/:
    get:
      summary: Retrieve a list of all playlists
      operationId: listPlaylists
      tags:
        - Playlist
      parameters:
        - name: playlist_type
          in: query
          description: Filter playlists by type (regular or custom)
          schema:
            type: string
      responses:
        "200":
          description: A list of playlists retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Playlist"
                  paginate:
                    $ref: "#/components/schemas/Pagination"
        "400":
          description: Invalid playlist type provided.
        "404":
          description: No playlists found.

    post:
      summary: Subscribe or unsubscribe from a list of playlists
      operationId: updatePlaylistSubscriptions
      tags:
        - Playlist
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlaylistSubscriptionUpdate"
      responses:
        "200":
          description: Playlist subscription status updated.
        "400":
          description: Missing or invalid request body.

  /playlist/{playlist_id}/:
    get:
      summary: Retrieve metadata for a specific playlist
      operationId: getPlaylist
      tags:
        - Playlist
      parameters:
        - name: playlist_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Playlist metadata retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Playlist"
        "404":
          description: Playlist not found.

    post:
      summary: Modify a playlist (e.g., add or move videos)
      operationId: modifyPlaylist
      tags:
        - Playlist
      parameters:
        - name: playlist_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlaylistModification"
      responses:
        "201":
          description: Playlist modified successfully.
        "400":
          description: Invalid action or request body.

    delete:
      summary: Delete a specific playlist
      operationId: deletePlaylist
      tags:
        - Playlist
      parameters:
        - name: playlist_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Playlist deleted successfully.

  /playlist/{playlist_id}/video/:
    get:
      summary: Retrieve all videos within a specific playlist
      operationId: listPlaylistVideos
      tags:
        - Playlist
      parameters:
        - name: playlist_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of videos retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Video"

  /watched/:
    post:
      summary: Change watched state of video, channel, or playlist
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WatchedRequest"
      responses:
        "200":
          description: Success message
        "400":
          description: Bad request

  /search/:
    get:
      summary: Run a search with the string in the query parameter
      parameters:
        - in: query
          name: query
          schema:
            type: string
          required: true
          description: The search query string
      responses:
        "200":
          description: Search results
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResults"
        "400":
          description: Bad request

security:
  - TokenAuth: []
components:
  securitySchemes:
    TokenAuth: # Arbitrary name for the security scheme
      type: apiKey
      in: header
      name: Authorization
  schemas:
    Video:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        url:
          type: string
        thumbnailUrl:
          type: string
        publishedAt:
          type: string
          format: date-time

    VideoProgress:
      type: object
      properties:
        youtube_id:
          type: string
        user_id:
          type: integer
        position:
          type: integer

    VideoProgressInput:
      type: object
      properties:
        position:
          type: integer

    Pagination:
      type: object
      properties:
        pageSize:
          type: integer
        pageFrom:
          type: integer

    Playlist:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          type: string
        videos:
          type: array
          items:
            $ref: "#/components/schemas/Video"

    PlaylistSubscriptionUpdate:
      type: object
      properties:
        playlists:
          type: array
          items:
            type: object
            properties:
              playlist_id:
                type: string
              subscribed:
                type: boolean

    PlaylistModification:
      type: object
      properties:
        action:
          type: string
        video_id:
          type: string

    SearchResults:
      type: object
      properties:
        results:
          type: object
          properties:
            video_results:
              type: array
              items:
                $ref: "#/components/schemas/SearchResultVideo"
            channel_results:
              type: array
              items:
                $ref: "#/components/schemas/SearchResultChannel"
            playlist_results:
              type: array
              items:
                $ref: "#/components/schemas/SearchResultPlaylist"
            fulltext_results:
              type: array
              items:
                $ref: "#/components/schemas/SearchResultFulltext"
          description: The search results grouped by type
        queryType:
          type: string
          description: The type of query performed

      SearchResultVideo:
      type: object
      properties:
        _index:
          type: string
          description: The index of the video
        # Add more properties from the _process_video method here
        youtube_id:
          type: string
          description: The YouTube ID of the video
        media_url:
          type: string
          description: The media URL of the video
        vid_last_refresh:
          type: string
          format: date-time
          description: The last refresh date of the video
        published:
          type: string
          format: date-time
          description: The published date of the video
        vid_thumb_url:
          type: string
          description: The thumbnail URL of the video

    SearchResultChannel:
      type: object
      properties:
        _index:
          type: string
          description: The index of the channel
        # Add more properties from the _process_channel method here
        channel_id:
          type: string
          description: The ID of the channel
        channel_last_refresh:
          type: string
          format: date-time
          description: The last refresh date of the channel
        channel_banner_url:
          type: string
          description: The banner URL of the channel
        channel_thumb_url:
          type: string
          description: The thumbnail URL of the channel
        channel_tvart_url:
          type: string
          description: The TV art URL of the channel

    SearchResultPlaylist:
      type: object
      properties:
        _index:
          type: string
          description: The index of the playlist
        # Add more properties from the _process_playlist method here
        playlist_id:
          type: string
          description: The ID of the playlist
        playlist_last_refresh:
          type: string
          format: date-time
          description: The last refresh date of the playlist
        playlist_thumbnail:
          type: string
          description: The thumbnail URL of the playlist

    SearchResultFulltext:
      type: object
      properties:
        _index:
          type: string
          description: The index of the fulltext result
        # Add more properties from the _process_subtitle method here
        youtube_id:
          type: string
          description: The YouTube ID of the fulltext result
        vid_thumb_url:
          type: string
          description: The thumbnail URL of the fulltext result
        # Add other properties as needed